name: Build Be

on:
  push:
    branches:
      - be
      - main
  pull_request:
    branches:
      - be
      - main

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: hungnv9999/api
      

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
           dotnet-version: 7
      - run: dotnet restore
      - name: Build App
        run: dotnet build
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3
  
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      id: buildx
  
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
  
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./server
        file: ./server/Dockerfile
        push: true
        builder: ${{ steps.buildx.outputs.name }}
        tags: ${{ env.IMAGE_NAME }}:latest
        labels: ${{ steps.meta.outputs.labels }}

  run-docker-compose:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: push_to_registry
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: SSH deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SHH_KEY }}
          script: |
            cd restaurant
            ./deploy.sh