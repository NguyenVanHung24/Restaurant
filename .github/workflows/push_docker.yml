name: BuildFE

on:
  push:
    branches:
      - fe
      - main
  pull_request:
    branches:
      - main

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: hungnv9999/app


jobs:

  # pushimage:
  #   runs-on: [self-hosted, some-label] 

    
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Build the Docker image
  #     run: docker-compose build --no-cache --force-rm 
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Test the Docker image
  #     run: docker-compose up -d 
  # build:
  #   runs-on: [self-hosted, some-label]
  #   defaults:
  #     run:
  #       working-directory: ./React-js-Master-Detail-CRUD-with-Asp.Net-Web-API/restaurant
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #     - run: npm install
  #     - name: Build App
  #       run: npm run build

  
  
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - run: echo ${{ vars.SSH_HOST }}
      - run: echo ${{ vars.SSH_KEY }}
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v2
  
    # - name: Log in to Docker Hub
    #   uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
    #   with:
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}
  
    # - name: Extract metadata (tags, labels) for Docker
    #   id: meta
    #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
    #   with:
    #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  
    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: ./React-js-Master-Detail-CRUD-with-Asp.Net-Web-API/restaurant   
    #     file: ./React-js-Master-Detail-CRUD-with-Asp.Net-Web-API/restaurant/Dockerfile
    #     push: true
    #     tags: ${{ env.IMAGE_NAME }}:latest
    #     labels: ${{ steps.meta.outputs.labels }}
      

      - name: SSH deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SHH_KEY }}
          script: |
            ls

      # - name: SSH deploy
      #   uses: LuisEnMarroquin/setup-ssh-action@v2.0.0
      #   with:
      #     ORIGIN: ${{ secrets.SSH_HOST }}
      #     USER: ${{ secrets.SSH_USER }}
      #     NAME: production
      #     SSHKEY: ${{ env.SSH_KEY }}
      # - run: ssh production "ls -la;id; echo hehe > h.txt "

      # - uses: actions/checkout@v2 
      # - name: Deploy in EC2
      #   env:
      #       PRIVATE_KEY: ${{ secrets.SSH_KEY  }}
      #       HOSTNAME : ${{ secrets.SSH_HOST  }}
      #       USER_NAME : ${{ secrets.SSH_USER  }}
            
      #   run: |
      #     echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
      #     ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '

      #      cd restaurant &&
      #      ls

      #       '

